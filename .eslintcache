[{"E:\\Programacion\\JS\\React\\introduccion-react\\src\\index.js":"1","E:\\Programacion\\JS\\React\\introduccion-react\\src\\reportWebVitals.js":"2","E:\\Programacion\\JS\\React\\introduccion-react\\src\\App.js":"3","C:\\xampp\\htdocs\\react-introduccion\\src\\index.js":"4","C:\\xampp\\htdocs\\react-introduccion\\src\\reportWebVitals.js":"5","C:\\xampp\\htdocs\\react-introduccion\\src\\App.js":"6","C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Header.jsx":"7","C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Footer.jsx":"8","C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Producto.jsx":"9","C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Carrito.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":528,"mtime":1611191707639,"results":"14","hashOfConfig":"12"},{"size":524,"mtime":1627765717268,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1627765717268,"results":"17","hashOfConfig":"16"},{"size":3681,"mtime":1627765717265,"results":"18","hashOfConfig":"16"},{"size":2956,"mtime":1627765717267,"results":"19","hashOfConfig":"16"},{"size":1607,"mtime":1627765717266,"results":"20","hashOfConfig":"16"},{"size":4310,"mtime":1627765717267,"results":"21","hashOfConfig":"16"},{"size":1527,"mtime":1627765717266,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1tk945s",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"60mjj0",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programacion\\JS\\React\\introduccion-react\\src\\index.js",[],["46","47"],"E:\\Programacion\\JS\\React\\introduccion-react\\src\\reportWebVitals.js",[],["48","49"],"E:\\Programacion\\JS\\React\\introduccion-react\\src\\App.js",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\index.js",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\App.js",["50"],"// Importamos la libreria \"Fragment\" que viene con React para poder utilizar los beneficios\r\n// de la etiqueta/componente <Fragment></Fragment>\r\nimport React, {Fragment, useState} from \"react\";\r\n// Importamos los Componente\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Producto from './components/Producto';\r\nimport Carrito from './components/Carrito';\r\n\r\nfunction App() {\r\n\r\n// Creamos variables o condicionales en este espacio\r\nconst fecha = new Date().getFullYear();\r\n\r\n// Creamos listado de productos utilizando la función \"useStates\"\r\n// Creamos un array con \"destructuring\" y el 1er parametro obtendra los valores del \"useState\" y el 2do será la función que modifique a este.\r\n// RECORDAR: no se puede modificar los valores que contenga un \"useState\" sobrescribiendo los valores, se tiene que utilizar la función\r\n//           que le pasamos como 2do parametro\r\nconst [productos, guardarProductos] = useState([\r\n  { id: 1, nombre: 'Camisa ReactJS', precio: 50},\r\n  { id: 2, nombre: 'Camisa VueJS', precio: 50},\r\n  { id: 3, nombre: 'Camisa Node.js', precio: 50},\r\n  { id: 4, nombre: 'Camisa Angular', precio: 50},\r\n]);\r\n\r\n// Creamos el Carrito utilizando la función \"useStates\"\r\n// Creamos un array con \"destructuring\" y el 1er parametro obtendra los valores del \"useState\" y el 2do será la función que modifique a este.\r\n// Siempre se tiene que agregar un valor para inicialisar el \"useState\", puede contener datos o valores de inicio como por ejemplo: \"{}\", \"[]\", '', 0, false\r\n// RECORDAR: no se puede modificar los valores que contenga un \"useState\" sobrescribiendo los valores, se tiene que utilizar la función\r\n//           que le pasamos como 2do parametro\r\nconst [carrito, agregarProducto] = useState([])\r\n\r\n// ============================================================================================================================================\r\n\r\n// Dentro del \"return\" solo se agregan las etiquetas de los componentes y sus correspondientes PROPS\r\n  return (\r\n    // Al utilizar la etiqueta/componente  <Fragment></Fragment>, este no crea etiquetas HTML de mas\r\n    // Solo creara las etiquetas de los componentes que lleva dentro.\r\n      <Fragment>\r\n          {/* Utilizamos los componentes creado */}\r\n          {/*Enviamos los PROPS como si asignaramos valores a un atributo de una etiqueta (por ejemplo los props \"titulo\" y \"fecha\")*/}\r\n          <Header titulo=\"Tienda Virtual\"/>\r\n\r\n          <h1>Lista de Productos</h1>\r\n          {/*.map() es la funcion que se utiliza mas en React para recorrer objetos/array, por eso lo utilizamos.\r\n             No utiliamos los corchetes en el .map() ya que los parentecis () dan por implicito que se retornará los valores que se encuentren dentro.*/}\r\n          {productos.map(producto => (\r\n            <Producto \r\n                key={producto.id} // Enviamos un PROPS con el atributo \"key\", por que sino nos tira un error por consola por no enviar un elemento unico.\r\n                producto={producto}\r\n                productos={productos}\r\n                carrito={carrito}\r\n                agregarProducto={agregarProducto} // Pasamos por PROPS la función  del \"useState\" que modificará el carrito\r\n            />\r\n          ))}\r\n\r\n          <Carrito \r\n              carrito={carrito}\r\n              agregarProducto={agregarProducto} // Pasamos por PROPS la función  del \"useState\" que modificará el carrito\r\n          />\r\n\r\n          {/*A continuación se muestra un ejemplo de como envíar un valor como props utilizando una variable y sintaxis JS*/}\r\n          <Footer fecha={fecha}/>\r\n      </Fragment>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Header.jsx",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Footer.jsx",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Producto.jsx",[],"C:\\xampp\\htdocs\\react-introduccion\\src\\components\\Carrito.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":19,"column":19,"nodeType":"59","messageId":"60","endLine":19,"endColumn":35},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'guardarProductos' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]